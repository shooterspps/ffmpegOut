name: Build Windows Releases

on:
  push:
    branches:
      - AU2
      - actions
    tags:
      - '*'

jobs:
  get_version_name:
    name: Get version name
    runs-on: ubuntu-latest
    outputs:
      rev_count: ${{ steps.rev.outputs.REVCOUNT }}
      version_name: ${{ steps.rev.outputs.VERSION_NAME }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set version name
      id: rev
      run: |
        cd ${{ github.workspace }}
        REVCOUNT=`git rev-list --count HEAD`
        echo "rev_count=${REVCOUNT}" >> $GITHUB_OUTPUT
        if [[ "${{ github.ref }}" =~ "refs/tags/" ]]; then
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
        else
          VERSION=r${REVCOUNT}
        fi
        echo "version_name=${VERSION}" >> $GITHUB_OUTPUT

  build:
    name: Upload Release Asset
    runs-on: windows-2022
    needs: get_version_name

    defaults:
      run:
        shell: cmd

    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86
            platform: Win32
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: ${{ matrix.arch }}

      - name: MSBuild
        run: |
          msbuild ffmpegOut.sln /t:build /p:configuration=Release /p:Platform=${{ matrix.platform }} -maxcpucount

      - name: Download auo_setup
        id: download_auosetup
        run: |
          curl -s -o auo_setup.zip -L https://github.com/rigaya/auo_setup/releases/download/2.02/auo_setup_2.02.zip

      - name: Create Archieve
        id: archieve
        run: |
          mkdir ffmpegOut_release
          7z x -offmpegOut_release\ auo_setup.zip
          copy /y .\Release\ffmpegOut.auo ffmpegOut_release\plugins\
          copy /y .\ffmpegOut\ffmpegOut.ini ffmpegOut_release\plugins\
          copy /y .\ffmpegOut\ffmpegOut.en.ini ffmpegOut_release\plugins\
          copy /y .\ffmpegOut\ffmpegOut.zh.ini ffmpegOut_release\plugins\
          echo D | xcopy /y /e .\ffmpegOut\stg ffmpegOut_release\plugins\ffmpegOut_stg
          copy /y .\ffmpegOut\auo_setup.ini ffmpegOut_release\exe_files\
          copy /y .\ffmpegOut\ffmpegOut_readme.txt ffmpegOut_release\
          dir /b /s ffmpegOut_release\
          7z a -mx9 AviUtl_ffmpegOut.zip .\ffmpegOut_release\*

          mkdir ffmpegOut_release2
          mkdir ffmpegOut_release2\Plugin
          mkdir ffmpegOut_release2\Plugin\exe_files
          xcopy /e /y ffmpegOut_release\exe_files ffmpegOut_release2\Plugin\exe_files
          xcopy /e /y ffmpegOut_release\plugins   ffmpegOut_release2\Plugin
          del ffmpegOut_release2\Plugin\auo_setup.auf
          del ffmpegOut_release2\Plugin\exe_files\auo_setup.exe
          del ffmpegOut_release2\Plugin\exe_files\auo_setup2.exe
          7z a -t7z -m0=lzma -mx=9 -mmt AviUtl2_ffmpegOut.7z .\ffmpegOut_release2\*
          copy /b "%SEVENZIP_SFX_PATH%" + Config.txt + AviUtl2_ffmpegOut.7z AviUtl2_ffmpegOut_install.exe

      - name: Check Version
        id: check_ver
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          powershell "$ver = (Get-ItemProperty .\Release\ffmpegOut.auo).VersionInfo.FileVersion; if ($ver -eq ) { exit 0; } exit 1;"

      - name: Calc hash
        id: calc_hash
        run: |
          7z h -scrc* AviUtl_ffmpegOut.zip
          7z h -scrc* AviUtl2_ffmpegOut_install.exe

      - name: delete release
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: new
          delete_release: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: latest version
          tag_name: new
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ffmpegOut.zip
          asset_name: ffmpegOut.zip
          asset_content_type: application/zip

      - name: Upload Release Asset
        id: upload-release-asset-exe 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Aviutl2_ffmpegOut_install.exe
          asset_name: Aviutl2_ffmpegOut_install.exe
          asset_content_type: application/x-msdownload